<script>

    import supabase from "$lib/db.js";
  
  
  // You want to raise ______ to build a _____.  
  
  // [ Sell future credits ]
  
  // community microgrid example
  //  let service = "energy"
  //  let infrastructure = "community microgrid"
  //  let capital = 4000000;
  //  let users = "homes";
  //  let users_per_month = 1000;
  //  let use_cost = 2000;
  
  //  let percent_savings_shared = 50;
  
  //  let payback_years = 12.5;
  
  // let per_time_unit = 1;
  
  // let percent_savings = 40;

  let service = "transportation"
   let infrastructure = "cargo bike"
   let capital = 20000000;
   let users = "drivers";
   let users_per_month = 10000;
   let use_cost = 500;
  
   let percent_savings_shared = 40;
  
   let payback_years = 1;
  
  let per_time_unit = 12;

  // for years, this should be 1.  For months, 12.  For weeks, 7.
  let per_time_coefficient = 12
  
  let percent_savings = 90;
  
  $: community_cost_annual = use_cost * users_per_month * (per_time_unit/per_time_coefficient);

  $: community_cost_monthly = use_cost * users_per_month * 12;

  $: community_savings = community_cost_annual * (percent_savings/100);
  
  $: total_savings = community_cost_annual * (percent_savings/100);

  $: payback_months = capital / community_savings;
  

   $: yearly_return = total_savings * (percent_savings_shared/100);
  
   $: absolute_return = yearly_return * payback_years;
  
   $: roi = ((absolute_return - capital) / capital) * 100;
  
   $: arr = roi / payback_years;
  
  
   let profile_form = false;
   let new_user;
  
   async function addEmail(e) {
  
  let formData = new FormData(e.target);
  
  profile_form = true;
  
  let random_password = Math.random().toString(36).substr(2, 8);
  
  const { data, error } = await supabase.auth.signUp(
    { email: formData.get('email'),
      password: random_password })
  if (data) {
    console.log(data);
    new_user = data;
    return data;
  }
  else {
    console.log(error);
    localStorage.setItem('email', formData.get('email'));
  }
  }
  
  async function addProfileInformation(e) {
  
  let formData = new FormData(e.target);
  
  // console.log(formData.get('email'));
  
  console.log([...formData]);
  
  if (new_user) {
    const { data, error } = await supabase
    .from('profiles')
    .update([
      {
          full_name: formData.get('full_name'),
          introduction: formData.get('introduction'),
          website_url: formData.get('website_url'),
          linkedin_url: formData.get('linkedin_url'),
          twitter_handle: formData.get('twitter_handle'),
          contact_method: formData.get('contact_method')
      },
    ])
    .eq('user_id', new_user.id)
  
    if (data) {
      console.log(data);
      // let new_user = data;
      profile_form = "submitted";
      return data;
    }
    else {
      console.log(error);
    }
  }
  
  else {
    let random_password = Math.random().toString(36).substr(2, 8);
  
    const { data, error } = await supabase.auth.signUp(
      { email: localStorage.getItem('email'),
        password: random_password },
      {
        data: {
          full_name: formData.get('full_name'),
          introduction: formData.get('introduction'),
          website_url: formData.get('website_url'),
          linkedin_url: formData.get('linkedin_url'),
          twitter_handle: formData.get('twitter_handle'),
          contact_method: formData.get('contact_method')
      }
    })
    if (data) {
      console.log(data);
      // let new_user = data;
      profile_form = "submitted";
      return data;
    }
    else {
      console.log(error);
    }
  }
  }
  
  </script>
  
  <article class="h-entry">
  
  <!-- <h3 class="p-name">Building Back Better w/ Community Savings (That Pay for Themselves)</h3> -->
  <h2 class="p-name" style="margin-bottom: 20px;">Saves for Itself</h2>
  <!-- <p style="margin-top: 5px;"><em><a href="#program">Create your own program</a></em></p> -->

      <div class="e-content">
  
            <div>
“You know what happened in Cuba in the early 90s?”

“Oh yeah …” your friend remarks, but only remebering vaguely.

“When the Soviet Union fell, they lost their only trading partner," you continued.  "They were cut off from the world.  They couldn’t get any oil.  They couldn’t get fertilizer without oil.  They couldn’t grow food.

“There were people gardening" — you gesture around your seat — "on every inch of land.  *In the cities,* you know?  Tearing up the concrete, planting in the dirt.  

"They used to drive cars and buses to get around — but no more oil.  So they imported 3 million bikes from China, shitty single-gear bikes, so they could get to work – or wait four hours for a bus.

“It was hell.  Don't take that lightly.  That was suffering, in those four years.  The average person lost 20 pounds.  ... And now?

Your friend shakes their head — they don't know that part of the history.

“They have the same life expectancy we do.  Better healthcare — they’re all doctors, pretty much" you add, laughing.  "And they do it with eight times less energy — across food, transportation, electricity, everything.

<img src="https://i.imgur.com/L1h2S7z.png" style="width: 400px; display: block;">

<em>Source: <a href="https://youtu.be/aeM5emtaVC0?t=2159">How Cuba Survived Peak Oil</a></em>

“We’re talking about reducing our consumption 50% by 2030.  They reduced it 85% in four years.

“All this stuff we have to do, starting in these months, it makes life better," you continue.  "Growing food at home, the bacteria we inhale from the soil, it [naturally makes us happier](https://blog.nwf.org/2011/03/its-in-the-dirt-bacteria-in-soil-may-make-us-happier-smarter/).  You don’t know how to garden, you don’t even need to fuss with dirt — you can sprout seeds with a jar and water.  A 64 ounce Mason jar, this big,” stretching your hands the size of a football, “you put in a few tablespoons of seeds, rinse with water twice a day, and in three days that whole jar is full of the most nutritious food you can get.  Lentils, beans, quinoa, arugula, cabbage, broccoli, wheat, all that stuff.  Just a jar and water.  10 cents a pound.  And whether in the dirt or in a jar, growing food at home like that is the best food we can get — and the best way to get it.

“Getting to live car-free.  Riding bikes around, grabbing buses, metro.  You have freedom with that.  You can go anywhere, make your connections, all over the place.  Right up the street, they have bus stops every 300 feet - they’re coming through all the time.  You just walk up, hop on, and in 45 minutes, you’re right along the Waterfront.  No parking, no hassle, time to do your thing, be with people and watch people, and your there.  Just like that.

“There are so many things we can do on *energy* energy.  Our electricity, homes, HVAC, all that.  You know one of the easiest ways to insulate your windows, keep the heat in, is just to tape bubble wrap on it?  There are places — where they build homes a lot sturdier than we do here — and they insulate them literally by gluing styrofoam blocks outside the walls.  That’s no thousand-dollar job, let alone a ten-thousand dollar job.  That’s a 100 blocks of styrofoam, this big,” showing a rectangular block with your hands, “and a ladder, and some YouTube videos so you can learn how to do it yourself.  And then we can talk about all the other stuff, and the panels, and the batteries.  But to do this today, starting these months, like the Secretary General of the UN said we need to?  We can do all that ourselves, in our neighborhoods, for nothing.  It just keeps us warmer and cooler, gives us resilience while the energy prices are crazy, and cuts back big time on the energy we need in our spaces.  Get one of mom’s hot water bottles, wear different clothes instead of heating or cooling the whole house, and that’s it.

“We can do all of this.  We can do it in these months.  We can start doing it this week.  You know every parking spot costs thirty thousand dollars?  At every new development, instead of building a twelve million dollar parking garage, the developers could get a bike for every family in the city — they would save ten million dollars on the garage, get more units, and we'd all be happier anyway.  On the roads, in our yards, our homes, all these places, we don’t even need to wait — we can start doing this stuff.  Trying things out, seeing how they go, actually living life — the experience of living and trying and figuring out how to make things work, like humans and all life does.  That’s purpose, that’s meaning, that’s engagement and community and friendship.  All we need to do is lift up our heads, recognize we only live once, and start doing it — together.”
            </div>
  
  <div id="program" class="program">
  <h4 style="padding-left: 10px">Create your "Saves For Itself" program</h4>
  <form class="variablesForm2" style="border-radius: 5px; padding: 0px 10px;">
  <p>I pay $<input class="" bind:value={use_cost} style="display: inline-block; width: {use_cost.toString().length * 11}px; min-width: 30px;" name="use_cost" placeholder="XXXXX.XX"> <select bind:value={per_time_unit}><option value={12}>per month</option><option value={1}>per year</option><option value={52}>per week</option><option value={365}>per day</option><option value={8760}>per hour</option></select> for <input style="width: 70px; display: inline-block; width: {service.length * 11}px; min-width: 30px;" name="service" bind:value={service} placeholder="{service}">. <br> <br>With <input style="display: inline-block; width: {users_per_month.toString().length * 11}px; min-width: 30px;" name="users_per_month" bind:value={users_per_month} placeholder="XXXXXX"> <input style="display: inline-block; width: {users.length * 11}px; min-width: 30px;" name="users" bind:value={users} placeholder="XXXXX.XX"> in our community, all together, we spend <strong>${community_cost_annual.toLocaleString()} per month on {service}</strong>.
  <br>
  <br>
  With a <input name="infrastructure" style="display: inline-block; width: {infrastructure.length * 10}px; min-width: 30px;" bind:value={infrastructure} placeholder=""> program, we could save
  <span class="range-div">{percent_savings}%<input type="range" bind:value={percent_savings} min={0} max={100}></span> on {service}
  — creating <strong>${total_savings.toLocaleString()}</strong> in savings every month.
  <br>
  <br>
  If a {infrastructure} program costs $<input bind:value={capital} style="display: inline-block; width: {capital.toString().length * 11}px; min-width: 30px;" name="capital" placeholder="XXXXX.XX">, and creates <strong>${total_savings.toLocaleString()}</strong> in savings per month, the program can "save for itself" in <strong>{payback_months.toFixed(2)} months.</strong>
  <br><br>
  And from then on, we enjoy <strong>{service}</strong> with <strong>${(total_savings/users_per_month).toLocaleString()} in monthly savings</strong> for each of us.
  </p>
  </form>
  </div>
  
  </div>
  </article>
  
  <style>
  .program {
      border: solid 1px black;
      padding: 2px 10px;
      border-radius: 10px;
      margin-top: 30px;
  }
  .program input {
    border: none;
    border-bottom: solid 1px grey;
    height: 1.5rem;
    font-size: 18px;
  }
  
  .program .range-div {
      display: inline-grid; 
      text-align: center; 
      font-weight: 600; 
      position: relative;
      height: 40px;
      margin-right: 4px;
  }
  .program input[type="range"] {
      height: 0.5rem;
      width: 70px;
      position: absolute;
      bottom: 0%;
      left: 50%;
      transform: translate(-50%);
  }
  
  .email-form {
      margin: 10px 0px;
  }
  
  @media only screen and (max-width: 800px) {
  
  /* .register button {
    margin: auto;
    text-align: center;
  }
  
  .profile-form {
    width: 100%;
  } */
  
  .embed-youtube {
  position: relative;
  padding-bottom: 56.25%; /* - 16:9 aspect ratio (most common) */
  /* padding-bottom: 62.5%; - 16:10 aspect ratio */
  /* padding-bottom: 75%; - 4:3 aspect ratio */
  padding-top: 30px;
  height: 0;
  overflow: hidden;
  width: 100%;
  }
  
  .embed-youtube iframe,
  .embed-youtube object,
  .embed-youtube embed {
  border: 0;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  }
  
  .profile-form, .success-alert, .footnotes {
    width: 95%;
  }
  
  /* .p-name {
    width: 100%;
    text-align: center;
  } */
  
  }
  
  @media only screen and (min-width: 801px) {
  
    .profile-form, .success-alert {
        width: 75%;
    }
  
    /* .p-name {
    width: 80%;
    text-align: center;
  } */
  
  .footnotes {
    width: 85%;
  }
  }
  
  .register {
        /* padding: 20px 20px; */
        border-radius: 10px;
        /* border: solid black 1px; */
        /* background: ghostwhite; */
        /* background: white; */
        /* width: 50%; */
      }
  
      .register-2 {
        /* text-align: center; */
        margin: 20px auto;
        /* box-shadow: 0 -1px 10px rgb(0 0 0 / 5%), 0 1px 4px rgb(0 0 0 / 10%), 0 10px 30px #f3ece8; */
      }
  
      .register-2 input:focus {
        border-color: #a4d2ff;
        box-shadow: 0 0 6px rgb(27 106 201 / 50%);
        outline: none;
      }
  
      .register-2 input {
        /* margin: auto; */
        width: 80%;
      }
  
      .profile-form {
        border-radius: 10px;
        padding: 10px;
        box-shadow: 0 -1px 10px rgb(0 0 0 / 5%), 0 1px 4px rgb(0 0 0 / 10%), 0 10px 30px #f3ece8;
        /* text-align: center; */
        /* margin: auto; */
      }
  
      .email-form input {
        /* margin: auto !important; */
      }
  
      .profile-form input {
        max-width: 50%;
      }
  
      .profile-form textarea {
        height: 70px;
        width: 95%;
      }
  
      .profile-form div {
        text-align: left;
        margin: 0 !important;
        width: 100%;
      }
  
      .profile-form label {
        font-size: 16px;
      }
  
      .register-2 button {
        border-radius: 20px;
        color: white;
        border: none;
        background: #2da562;
        padding: 0.5em 2em;
        margin-top: 10px;
        /* text-align: center;
        margin-left: auto; */
        /* padding: 5px 10px; */
        /* width: 30%; */
        font-size: 16px;
        cursor: pointer;
      }
  
      .register label, .register input, .register button, .register textarea {
        display: block;
      }
  
      .register input {
        box-sizing: border-box;
        font-size: 16px;
        line-height: 1.5rem;
        padding: 1px 2px;
      }
  
      .register input {
        padding: 3px 3px;
      }
  
      .register textarea, .register input {
        border-radius: 5px;
        /* background: #fbfbfb; */
        border: solid lightgrey 1px;
      }
  
      .success-link:hover {
        border-bottom: solid 1px #003cff;
        text-decoration: none;
      }
  
      .footnotes {
        font-size: 14px;
        background: #f8f8f8;
        padding: 2px 10px;
        border-radius: 10px;
      }
  </style>